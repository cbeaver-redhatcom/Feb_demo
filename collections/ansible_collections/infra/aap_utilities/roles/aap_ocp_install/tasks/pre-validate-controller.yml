---
- name: Ensure controller instance name variable is set (block)
  block:
    - name: Ensure controller instance name variable is set
      ansible.builtin.assert:
        that:
          - aap_ocp_install_controller['instance_name'] | default('', true) | length > 0
        quiet: true
  rescue:
    - name: Update validation errors fact - controller instance_name
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['instance_name'] must be set"] }}

- name: Ensure controller admin username variable is set (block)
  when: aap_ocp_install_controller['admin_user'] is defined
  block:
    - name: Ensure controller admin username variable is set
      ansible.builtin.assert:
        that:
          - aap_ocp_install_controller['admin_user'] | default('', true) | length > 0
        quiet: true
  rescue:
    - name: Update validation errors fact - controller admin_user
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['admin_user'] must be a non-empty string"] }}

- name: Ensure controller namespace variable is set (block)
  when: aap_ocp_install_controller['namespace'] is defined
  block:
    - name: Ensure controller namespace variable is set
      ansible.builtin.assert:
        that:
          - aap_ocp_install_controller['namespace'] | default("", true) | regex_search('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
        quiet: true
  rescue:
    - name: Update validation errors fact - namespace
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['namespace'] must be a lowercase RFC 1123 label consisting of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc'"] }}

- name: Ensure controller link text variable is set (block)
  when: aap_ocp_install_controller['link_text'] is defined
  block:
    - name: Ensure controller link text variable is set
      ansible.builtin.assert:
        that:
          - aap_ocp_install_controller['link_text'] | default('', true) | length > 0
        quiet: true
  rescue:
    - name: Update validation errors fact - controller link_text
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['link_text'] must be a non-empty string"] }}

- name: Ensure controller image pull policy is valid (block)
  when: aap_ocp_install_controller['image_pull_policy'] is defined
  block:
    - name: Ensure controller image pull policy is valid
      ansible.builtin.assert:
        that:
          - aap_ocp_install_controller['image_pull_policy'] is in ['IfNotPresent', 'Always', 'Never']
        quiet: true
  rescue:
    - name: Update validation errors fact - controller image_pull_policy
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['image_pull_policy'] must be one of: IfNotPresent, Always, or Never"] }}

- name: Ensure controller create preload data is valid (block)
  when: aap_ocp_install_controller['create_preload_data'] is defined
  block:
    - name: Ensure controller create preload data is valid
      ansible.builtin.assert:
        that:
          - (aap_ocp_install_controller['create_preload_data'] | string | lower) is in ['true', 'false']
        quiet: true
  rescue:
    - name: Update validation errors fact - controller create_preload_data
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['create_preload_data'] must be one of: true or false"] }}

- name: Ensure controller garbage collect secrets is valid (block)
  when: aap_ocp_install_controller['garbage_collect_secrets'] is defined
  block:
    - name: Ensure controller garbage collect secrets is valid
      ansible.builtin.assert:
        that:
          - (aap_ocp_install_controller['garbage_collect_secrets'] | string | lower) is in ['true', 'false']
        quiet: true
  rescue:
    - name: Update validation errors fact - controller garbage_collect_secrets
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['garbage_collect_secrets'] must be one of: true or false"] }}

- name: Ensure controller projects persistence is valid (block)
  when: aap_ocp_install_controller['projects_persistence'] is defined
  block:
    - name: Ensure controller projects persistence is valid
      ansible.builtin.assert:
        that:
          - (aap_ocp_install_controller['projects_persistence'] | string | lower) is in ['true', 'false']
        quiet: true
  rescue:
    - name: Update validation errors fact - controller projects_persistence
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['projects_persistence'] must be one of: true or false"] }}

- name: Ensure controller replicas is valid (block)
  when: aap_ocp_install_controller['replicas'] is defined
  block:
    - name: Ensure controller replicas is valid
      ansible.builtin.assert:
        that:
          - (aap_ocp_install_controller['replicas'] | int) > 0
        quiet: true
  rescue:
    - name: Update validation errors fact - controller replicas
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['replicas'] must be a number greater than 0"] }}

- name: Ensure controller projects storage size is valid (block)
  when: aap_ocp_install_controller['projects_storage_size'] is defined
  block:
    - name: Ensure controller projects storage size is valid
      ansible.builtin.assert:
        that:
          - (aap_ocp_install_controller['projects_storage_size'] | regex_replace('^(?P<size>[0-9]+)(?P<si>Ki|K|Mi|M|Gi|G|Ti|T|Pi|P|Ei|E)$', '\\g<size>') | int) > 0
          - (aap_ocp_install_controller['projects_storage_size'] | regex_replace('^(?P<size>[0-9]+)(?P<si>Ki|K|Mi|M|Gi|G|Ti|T|Pi|P|Ei|E)$', '\\g<si>')) is in ['Ki','K','Mi','M','Gi','G','Ti','T','Pi','P','Ei','E']
        quiet: true
  rescue:
    - name: Update validation errors fact - projects_storage_size replicas
      ansible.builtin.set_fact:
        __aap_ocp_install_prevalidate_errors: >
          {{ __aap_ocp_install_prevalidate_errors + ["aap_ocp_install_controller['projects_storage_size'] must be a number greater than 0 with a size (e.g. 12Gi or 10000M)"] }}
...
